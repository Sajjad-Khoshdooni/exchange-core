# Generated by Django 4.1.3 on 2023-01-21 12:50
from decimal import Decimal

import django.core.validators
from django.db import migrations, models
import uuid


create_partition_sql = '''
BEGIN TRANSACTION;
LOCK TABLE market_order IN ACCESS EXCLUSIVE MODE;
--
-- Name: RENAME table and indexes
--
ALTER TABLE market_order rename to market_order_old;

ALTER SEQUENCE market_order_id_seq RENAME TO market_order_old_id_seq;

ALTER INDEX market_new_orders_price_idx RENAME TO old_market_new_orders_price_idx;
ALTER INDEX market_orde_symbol__128462_idx RENAME TO old_market_orde_symbol__128462_idx;
ALTER INDEX market_orde_symbol__4fd1e4_idx RENAME TO old_market_orde_symbol__4fd1e4_idx;
ALTER INDEX market_order_stop_loss_id_cb8641f6 RENAME TO market_order_old_stop_loss_id_cb8641f6;
ALTER INDEX market_order_symbol_id_5d6fd3ba RENAME TO market_order_old_symbol_id_5d6fd3ba;
ALTER INDEX market_order_wallet_id_8de9f147 RENAME TO market_order_old_wallet_id_8de9f147;

ALTER TABLE market_order_old RENAME CONSTRAINT market_order_stop_loss_id_cb8641f6_fk_market_stoploss_id to market_order_old_stop_loss_id_cb8641f6_fk_market_stoploss_id;
ALTER TABLE market_order_old RENAME CONSTRAINT market_order_symbol_id_5d6fd3ba_fk_market_pairsymbol_id to market_order_old_symbol_id_5d6fd3ba_fk_market_pairsymbol_id;
ALTER TABLE market_order_old RENAME CONSTRAINT market_order_wallet_id_8de9f147_fk_ledger_wallet_id to market_order_old_wallet_id_8de9f147_fk_ledger_wallet_id;

ALTER TABLE market_order_old RENAME CONSTRAINT market_order_pkey to market_order_old_pkey;


--
-- Name: CREATE Partitioned Table
--
CREATE TABLE public.market_order (
    id bigint NOT NULL,
    type character varying(8),
    created timestamp with time zone NOT NULL,
    amount numeric(30,8) NOT NULL,
    price numeric(30,8) NOT NULL,
    side character varying(8) NOT NULL,
    fill_type character varying(8) NOT NULL,
    status character varying(8) NOT NULL,
    client_order_id character varying(36),
    symbol_id bigint NOT NULL,
    wallet_id bigint NOT NULL,
    filled_amount numeric(30,8) NOT NULL,
    stop_loss_id bigint,
    group_id uuid,
    CONSTRAINT check_filled_amount CHECK ((filled_amount <= amount)),
    CONSTRAINT check_market_order_amounts CHECK (((amount >= (0)::numeric) AND (filled_amount >= (0)::numeric) AND (price >= (0)::numeric)))
) PARTITION BY LIST(status);


CREATE SEQUENCE public.market_order_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

select setval('public.market_order_id_seq', COALESCE((select max(id)+1 from market_order), 1));

ALTER SEQUENCE public.market_order_id_seq OWNED BY public.market_order.id;
ALTER TABLE ONLY public.market_order ALTER COLUMN id SET DEFAULT nextval('public.market_order_id_seq'::regclass);
ALTER TABLE ONLY public.market_order
    ADD CONSTRAINT market_order_pkey PRIMARY KEY (id, status);
CREATE INDEX market_new_orders_price_idx ON public.market_order USING btree (price) WHERE ((status)::text = 'new'::text);
CREATE INDEX market_orde_symbol__128462_idx ON public.market_order USING btree (symbol_id, type, status, created);
CREATE INDEX market_orde_symbol__4fd1e4_idx ON public.market_order USING btree (symbol_id, status);
CREATE INDEX market_order_stop_loss_id_cb8641f6 ON public.market_order USING btree (stop_loss_id);
CREATE INDEX market_order_symbol_id_5d6fd3ba ON public.market_order USING btree (symbol_id);
CREATE INDEX market_order_wallet_id_8de9f147 ON public.market_order USING btree (wallet_id);
ALTER TABLE public.market_order
    ADD CONSTRAINT market_order_stop_loss_id_cb8641f6_fk_market_stoploss_id FOREIGN KEY (stop_loss_id) REFERENCES public.market_stoploss(id) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE public.market_order
    ADD CONSTRAINT market_order_symbol_id_5d6fd3ba_fk_market_pairsymbol_id FOREIGN KEY (symbol_id) REFERENCES public.market_pairsymbol(id) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE public.market_order
    ADD CONSTRAINT market_order_wallet_id_8de9f147_fk_ledger_wallet_id FOREIGN KEY (wallet_id) REFERENCES public.ledger_wallet(id) DEFERRABLE INITIALLY DEFERRED;

--
-- Name: CREATE Partitions
--
CREATE TABLE market_order_status_new PARTITION OF market_order for values in ('new');
CREATE TABLE market_order_status_finished PARTITION OF market_order for values != 'new';

--
-- Name: Fill Partitions
--
INSERT INTO market_order_status_new SELECT * from market_order_old where status='new';
INSERT INTO market_order_status_finished SELECT * from market_order_old where status != 'new';


COMMIT TRANSACTION;
'''

rename_old_sql = '''
BEGIN TRANSACTION;
LOCK TABLE market_order IN ACCESS EXCLUSIVE MODE;

-- Name: RENAME table and indexes
--
DROP table market_order;
ALTER TABLE market_order_old RENAME to market_order;

ALTER SEQUENCE market_order_old_id_seq RENAME TO market_order_id_seq;

ALTER INDEX old_market_new_orders_price_idx RENAME TO market_new_orders_price_idx;
ALTER INDEX old_market_orde_symbol__128462_idx RENAME TO market_orde_symbol__128462_idx;
ALTER INDEX old_market_orde_symbol__4fd1e4_idx RENAME TO market_orde_symbol__4fd1e4_idx;
ALTER INDEX market_order_old_stop_loss_id_cb8641f6 RENAME TO market_order_stop_loss_id_cb8641f6;
ALTER INDEX market_order_old_symbol_id_5d6fd3ba RENAME TO market_order_symbol_id_5d6fd3ba;
ALTER INDEX market_order_old_wallet_id_8de9f147 RENAME TO market_order_wallet_id_8de9f147;


ALTER TABLE market_order RENAME CONSTRAINT market_order_old_stop_loss_id_cb8641f6_fk_market_stoploss_id to market_order_stop_loss_id_cb8641f6_fk_market_stoploss_id;
ALTER TABLE market_order RENAME CONSTRAINT market_order_old_symbol_id_5d6fd3ba_fk_market_pairsymbol_id to market_order_symbol_id_5d6fd3ba_fk_market_pairsymbol_id;
ALTER TABLE market_order RENAME CONSTRAINT market_order_old_wallet_id_8de9f147_fk_ledger_wallet_id to market_order_wallet_id_8de9f147_fk_ledger_wallet_id;

ALTER TABLE market_order RENAME CONSTRAINT market_order_old_pkey to market_order_pkey;

COMMIT TRANSACTION;
'''


class Migration(migrations.Migration):

    dependencies = [
        ('market', '0036_remove_cancelrequest_order_remove_trade_order_and_more'),
    ]

    operations = [
        migrations.RunSQL(create_partition_sql, rename_old_sql),
    ]
