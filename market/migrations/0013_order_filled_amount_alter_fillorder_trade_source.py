# Generated by Django 4.0 on 2022-04-18 12:49
from decimal import Decimal

import django.core.validators
from django.db import migrations, models, transaction
from django.db.models import Sum

from ledger.utils.precision import floor_precision


def populate_filled_amount(apps, schema_editor):
    Order = apps.get_model('market', 'Order')
    with transaction.atomic():
        for order in Order.all_objects.select_for_update().exclude(made_fills__isnull=True, taken_fills__isnull=True):
            amount = (order.made_fills.all().aggregate(sum=Sum('amount'))['sum'] or 0) + (
                    order.taken_fills.all().aggregate(sum=Sum('amount'))['sum'] or 0)
            order.filled_amount = floor_precision(Decimal(amount), order.symbol.step_size)
            if order.filled_amount:
                order.save()


class Migration(migrations.Migration):

    dependencies = [
        ('market', '0012_fillorder_trade_source'),
    ]

    operations = [
        migrations.AddField(
            model_name='order',
            name='filled_amount',
            field=models.DecimalField(decimal_places=18, default=0, max_digits=40, validators=[django.core.validators.MinValueValidator(0)]),
            preserve_default=False,
        ),
        migrations.RunPython(
            code=populate_filled_amount, reverse_code=migrations.RunPython.noop
        )
    ]
