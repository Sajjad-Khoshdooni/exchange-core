# Generated by Django 4.0 on 2022-03-13 09:23

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.manager
from django.db import migrations, models

from ledger.utils.precision import get_precision


def populate_markets(apps, schema_editor):
    PairSymbol = apps.get_model('market', 'PairSymbol')
    Asset = apps.get_model('ledger', 'Asset')
    irt_asset = Asset.objects.get(symbol='IRT')
    usdt_asset = Asset.objects.get(symbol='USDT')

    for asset in Asset.objects.exclude(symbol='IRT'):
        for base_asset in (irt_asset, usdt_asset):
            if asset.symbol == 'USDT' and base_asset.symbol == 'USDT':
                continue
            symbol, _ = PairSymbol.objects.get_or_create(
                asset=asset, base_asset=base_asset, defaults={'name': f'{asset.symbol}{base_asset.symbol}'}
            )
            symbol.tick_size = asset.price_precision_irt if base_asset.symbol == 'IRT' else asset.price_precision_usdt
            symbol.step_size = get_precision(asset.trade_quantity_step)
            symbol.min_trade_quantity = asset.min_trade_quantity
            symbol.max_trade_quantity = asset.max_trade_quantity
            symbol.maker_quantity = min(10000 * asset.min_trade_quantity, asset.max_trade_quantity / 100)
            symbol.save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ledger', '0065_alter_asset_ask_diff_alter_asset_bid_diff'),
    ]

    operations = [
        migrations.CreateModel(
            name='PairSymbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, unique=True)),
                ('taker_fee', models.DecimalField(decimal_places=8, default=0.002, max_digits=9)),
                ('maker_fee', models.DecimalField(decimal_places=8, default=0, max_digits=9)),
                ('tick_size', models.SmallIntegerField(default=2)),
                ('step_size', models.SmallIntegerField(default=4)),
                ('min_trade_quantity', models.DecimalField(decimal_places=18, default=Decimal('0.0001'), max_digits=40, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_trade_quantity', models.DecimalField(decimal_places=18, default=Decimal('10000'), max_digits=40, validators=[django.core.validators.MinValueValidator(0)])),
                ('market_maker_enabled', models.BooleanField(default=True)),
                ('maker_amount', models.DecimalField(decimal_places=18, default=Decimal('1'), max_digits=40, validators=[django.core.validators.MinValueValidator(0)])),
                ('enable', models.BooleanField(default=False)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pair', to='ledger.asset')),
                ('base_asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_pair', to='ledger.asset')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('sell', 'sell'), ('buy', 'buy'), ('depth', 'depth'), (None, 'ordinary')], max_length=8, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=18, max_digits=40, validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=18, max_digits=40, validators=[django.core.validators.MinValueValidator(0)])),
                ('side', models.CharField(choices=[('buy', 'buy'), ('sell', 'sell')], max_length=8)),
                ('fill_type', models.CharField(choices=[('limit', 'limit'), ('market', 'market')], max_length=8)),
                ('status', models.CharField(choices=[('new', 'new'), ('canceled', 'canceled'), ('filled', 'filled')], default='new', max_length=8)),
                ('client_order_id', models.CharField(default=uuid.uuid4, max_length=36)),
                ('lock', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='market_order', to='ledger.balancelock')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.pairsymbol')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='ledger.wallet')),
            ],
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='FillOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=18, max_digits=40, validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=18, max_digits=40, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_buyer_maker', models.BooleanField()),
                ('group_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('maker_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='made_fills', to='market.order')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.pairsymbol')),
                ('taker_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_fills', to='market.order')),
            ],
        ),
        migrations.CreateModel(
            name='CancelRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cancel_request', to='market.order')),
            ],
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['symbol', 'type', 'status', 'created'], name='market_orde_symbol__128462_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='order',
            unique_together={('wallet', 'client_order_id')},
        ),
        migrations.RunPython(
            code=populate_markets, reverse_code=migrations.RunPython.noop
        ),
    ]
