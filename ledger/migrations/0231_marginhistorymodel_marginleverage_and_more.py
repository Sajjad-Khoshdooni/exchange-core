# Generated by Django 4.1.3 on 2023-12-14 09:11

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.expressions
from django.db import migrations, models
from django.db.models import F


def populate_wallets(apps, sch):
    MarginPosition = apps.get_model('ledger', 'MarginPosition')
    MarginPosition.objects.all().update(asset_wallet=F('wallet'), base_wallet=F('wallet'))


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0173_merge_20231214_0934'),
        ('ledger', '0230_alter_addressbook_account'),
    ]

    operations = [
        migrations.CreateModel(
            name='MarginHistoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=30, validators=[django.core.validators.MinValueValidator(0)])),
                ('type', models.CharField(choices=[('pnl', 'pnl'), ('transfer', 'transfer'), ('trade_fee', 'trade_fee'), ('int_fee', 'int_fee'), ('ins_fee', 'ins_fee'), ('p_transfer', 'p_transfer')], max_length=12)),
                ('group_id', models.UUIDField()),
            ],
        ),
        migrations.CreateModel(
            name='MarginLeverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('leverage', models.DecimalField(decimal_places=8, default=Decimal('1'), max_digits=30, validators=[django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.RemoveConstraint(
            model_name='wallet',
            name='valid_balance_constraint',
        ),
        migrations.RemoveField(
            model_name='asset',
            name='margin_enable',
        ),
        migrations.RemoveField(
            model_name='depositrecoveryrequest',
            name='sender_address',
        ),
        migrations.AddField(
            model_name='asset',
            name='margin_interest_fee',
            field=models.DecimalField(decimal_places=8, default=Decimal('0.00015'), max_digits=30, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='marginposition',
            name='alert_mode',
            field=models.BooleanField(db_index=True, default=False),
        ),

        migrations.AddField(
            model_name='marginposition',
            name='asset_wallet',
            field=models.ForeignKey(null=True, blank=True, on_delete=django.db.models.deletion.PROTECT,
                                    related_name='asset_wallet', to='ledger.wallet'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='marginposition',
            name='base_wallet',
            field=models.ForeignKey(null=True, blank=True, on_delete=django.db.models.deletion.PROTECT,
                                    related_name='base_wallet', to='ledger.wallet'),
            preserve_default=False,
        ),
        migrations.RunPython(populate_wallets, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name='marginposition',
            name='wallet',
        ),
        migrations.AlterField(
            model_name='marginposition',
            name='asset_wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='asset_wallet',
                                    to='ledger.wallet'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='marginposition',
            name='base_wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='base_wallet',
                                    to='ledger.wallet'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='marginposition',
            name='group_id',
            field=models.UUIDField(default=uuid.uuid4),
        ),
        migrations.AddField(
            model_name='marginposition',
            name='net_amount',
            field=models.DecimalField(decimal_places=8, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='marginposition',
            name='status',
            field=models.CharField(choices=[('open', 'open'), ('closed', 'closed'), ('terminating', 'terminating')], default='open', max_length=12),
        ),
        migrations.AlterField(
            model_name='trx',
            name='scope',
            field=models.CharField(choices=[('t', 'trade'), ('f', 'transfer'), ('m', 'margin transfer'), ('b', 'margin borrow'), ('c', 'commission'), ('l', 'liquid'), ('fl', 'fast liquid'), ('p', 'prize'), ('r', 'revert'), ('ad', 'airdrop'), ('st', 'stake'), ('sr', 'stake revenue'), ('sf', 'stake fee'), ('rs', 'reserve'), ('du', 'dust'), ('mn', 'manual'), ('dl', 'delist'), ('rb', 'rebrand'), ('mi', 'margin_insurance'), ('in', 'margin_interest')], max_length=2),
        ),
        migrations.AlterField(
            model_name='wallet',
            name='variant',
            field=models.UUIDField(blank=True, db_index=True, default=None, null=True),
        ),
        migrations.AddIndex(
            model_name='marginposition',
            index=models.Index(fields=['status', 'symbol', 'liquidation_price'], name='position_idx'),
        ),
        migrations.AddIndex(
            model_name='trx',
            index=models.Index(fields=['scope', 'sender', 'created'], name='trx_margin_idx'),
        ),
        migrations.AddConstraint(
            model_name='wallet',
            constraint=models.CheckConstraint(check=models.Q(('check_balance', False), models.Q(models.Q(('market__in', ('loan', 'debt', 'margin')), _negated=True), ('balance__gte', django.db.models.expressions.CombinedExpression(models.F('locked'), '-', models.F('credit')))), models.Q(('market__in', ('loan', 'debt')), ('balance__lte', 0), ('locked', 0)), models.Q(('market', 'margin'), ('variant__isnull', True), ('balance__gte', django.db.models.expressions.CombinedExpression(models.F('locked'), '-', models.F('credit')))), models.Q(('market', 'margin'), ('variant__isnull', False)), _connector='OR'), name='valid_balance_constraint'),
        ),
        migrations.AddField(
            model_name='marginleverage',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.account'),
        ),
        migrations.AddField(
            model_name='marginhistorymodel',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ledger.asset'),
        ),
        migrations.AddField(
            model_name='marginhistorymodel',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ledger.marginposition'),
        ),
        migrations.AddConstraint(
            model_name='marginhistorymodel',
            constraint=models.UniqueConstraint(condition=models.Q(('type', 'int_fee')), fields=('position', 'group_id', 'created'), name='position_group_id_created_unique'),
        ),
    ]
