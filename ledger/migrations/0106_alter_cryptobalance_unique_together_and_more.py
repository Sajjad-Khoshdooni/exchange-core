# Generated by Django 4.0 on 2022-07-25 03:02
import json

import django.utils.timezone
from django.db import migrations, models

tag_to_address_mapping = '/tmp/tag-address.json'


def populate_address_key(apps, schema_editor):
    DepositAddress = apps.get_model('ledger', 'DepositAddress')
    AddressKey = apps.get_model('ledger', 'AddressKey')

    try:
        with open(tag_to_address_mapping, 'r') as f:
            tag_mapping = json.load(f)
    except:
        return

    account_mapping = {}

    for tag, address in tag_mapping.items():
        try:
            account_id = int(tag[len('raastin-base-'):])
        except ValueError:
            continue

        address_key = AddressKey.objects.create(account_id=account_id, address=address)

        account_mapping[account_id] = address_key

    for deposit in DepositAddress.objects.all():
        deposit.address_key = account_mapping[deposit.account_secret.account_id]

        deposit.address = deposit.address_key.address

        deposit.is_registered = True
        deposit.save()


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0070_alter_externalnotification_scope'),
        ('ledger', '0105_alter_margintransfer_amount'),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='cryptobalance',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='depositaddress',
            unique_together={('network', 'address')},
        ),
        migrations.AddField(
            model_name='depositaddress',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='depositaddress',
            name='is_registered',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='networkasset',
            name='can_deposit',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='AddressKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=256)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.account')),
            ],
            options={
                'unique_together': {('account', 'address')},
            },
        ),
        migrations.RemoveField(
            model_name='cryptobalance',
            name='deposit_address',
        ),
        migrations.AddField(
            model_name='depositaddress',
            name='address_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ledger.addresskey', null=True),
            preserve_default=False,
        ),
        migrations.RunPython(populate_address_key, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='depositaddress',
            name='address_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ledger.addresskey'),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='depositaddress',
            name='account_secret',
        ),
        migrations.DeleteModel(
            name='AccountSecret',
        ),
    ]
